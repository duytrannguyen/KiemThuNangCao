/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package com.QiFeng_Milktea.ul;

import com.QiFeng_Milktea.utils.JdbcHelper;
import com.QiFeng_Milktea.utils.XDate;
import java.sql.ResultSet;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Dongduy
 */
public class LichSuThanhToan extends javax.swing.JDialog {

    /**
     * Creates new form LichSuHoaDon
     */
    public LichSuThanhToan(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblLichSu = new javax.swing.JTable();
        scrollBarCustom1 = new com.raven.suportSwing.ScrollBarCustom();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(204, 204, 204));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("LỊCH SỬ HÓA ĐƠN");

        tblLichSu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "STT", "Mã hóa đơn", "Số hóa đơn", "Tên khách hàng", "Số lượng", "Tổng tiền", "Ngày thanh toán", "Nhân viên"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblLichSu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(425, 425, 425)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(475, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1070, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(scrollBarCustom1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(141, 141, 141)
                        .addComponent(scrollBarCustom1, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel1)
                        .addGap(65, 65, 65)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(94, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LichSuThanhToan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LichSuThanhToan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LichSuThanhToan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LichSuThanhToan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                LichSuThanhToan dialog = new LichSuThanhToan(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private com.raven.suportSwing.ScrollBarCustom scrollBarCustom1;
    private javax.swing.JTable tblLichSu;
    // End of variables declaration//GEN-END:variables
void init() {
    this.setLocationRelativeTo(null);
        fillTable();
    }

    void fillTable() {
        try {
            DefaultTableModel model = new DefaultTableModel();
            model.addColumn("Mã hóa đơn");
            model.addColumn("Số hóa đơn");
            model.addColumn("Tên khách hàng");
            model.addColumn("Số lượng");
            model.addColumn("Tổng tiền");
            model.addColumn("Ngày thanh toán");
            model.addColumn("Nhân viên");
            String sql = "SELECT dbo.HoaDon.MaHD, dbo.HoaDon.SoHoaDon, dbo.HoaDon.TongTien, dbo.HoaDon.NgayTao, SUM(dbo.HoaDonChiTiet.SoLuong) AS SoLuong, dbo.KhachHang.TenKH, dbo.NhanVien.TenNV\n"
                    + "FROM     dbo.HoaDon\n"
                    + "INNER JOIN dbo.HoaDonChiTiet ON dbo.HoaDon.MaHD = dbo.HoaDonChiTiet.MaHD\n"
                    + "INNER JOIN dbo.KhachHang ON dbo.HoaDon.MaKH = dbo.KhachHang.MaKH\n"
                    + "INNER JOIN dbo.NhanVien ON dbo.HoaDon.MaNV = dbo.NhanVien.MaNV\n"
                    + "GROUP BY dbo.HoaDon.MaHD, dbo.HoaDon.SoHoaDon, dbo.HoaDon.TongTien, dbo.HoaDon.NgayTao, dbo.KhachHang.TenKH, dbo.NhanVien.TenNV";
            ResultSet rs = JdbcHelper.query(sql);

            while (rs.next()) {
                Object[] row = new Object[]{
                    rs.getInt("MaHD"),
                    rs.getString("SoHoaDon"),
                    rs.getString("TenKH"),
                    rs.getInt("SoLuong"),
                    XDate.DinhDangTien(rs.getDouble("TongTien")) + " VNĐ", // Xử lý định dạng tiền tệ
                   XDate.toString(rs.getDate("NgayTao"), "dd-MM-yyyy") ,
                    rs.getString("TenNV")
                };
                model.addRow(row); // Thêm dữ liệu vào model
            }
            tblLichSu.setModel(model); // Đặt model cho bảng
        } catch (Exception e) {
            // Xử lý ngoại lệ, ví dụ: hiển thị thông báo lỗi cụ thể cho người dùng
            e.printStackTrace();
        }
    }

}
