/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.QiFeng_Milktea.ul;

import com.QiFeng_Milktea.bill.BLLHoaDon;
import com.QiFeng_Milktea.bill.XuatHoaDon;
import com.QiFeng_Milktea.dao.HoaDonCTDAO;
import com.QiFeng_Milktea.dao.HoaDonDAO;
import com.QiFeng_Milktea.dao.KhachHangDAO;
import com.QiFeng_Milktea.dao.LoaiSPDAO;
import com.QiFeng_Milktea.dao.NhanVienDAO;
import com.QiFeng_Milktea.dao.SanPhamDAO;
import com.QiFeng_Milktea.entity.HoaDon;
import com.QiFeng_Milktea.entity.HoaDonChiTiet;
import com.QiFeng_Milktea.entity.KhachHang;
import com.QiFeng_Milktea.entity.MaLoaiSP;
import com.QiFeng_Milktea.entity.SanPham;
import com.QiFeng_Milktea.utils.Auth;
import com.QiFeng_Milktea.utils.MsgBox;
import com.QiFeng_Milktea.utils.XDate;
import com.raven.component.Header;
import java.awt.Dimension;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class QuanLyHD extends javax.swing.JPanel {

    /**
     * Creates new form QuanLyKhachHang
     */
    SanPhamDAO dao = new SanPhamDAO();
    LoaiSPDAO loaidao = new LoaiSPDAO();
    NhanVienDAO nvdao = new NhanVienDAO();
    KhachHangDAO khdao = new KhachHangDAO();
    HoaDonDAO hddao = new HoaDonDAO();
    HoaDonCTDAO hdctdao = new HoaDonCTDAO();
    int row = -1;
    private Header header = new Header();

    public QuanLyHD() {
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlSanPham = new javax.swing.JPanel();
        btnThemKhachHang = new javax.swing.JButton();
        txtTenKH = new javax.swing.JTextField();
        txtDienThoai = new javax.swing.JTextField();
        txtDiaChi = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        btnLoaKH = new javax.swing.JButton();
        btnTim = new javax.swing.JButton();
        pnlHoaDon = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtNgayTao = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtSoHD = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtNhanVien = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        pnlTTHoaDon = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        txtTongTien = new javax.swing.JTextField();
        btnTaoHDMoi = new com.raven.suportSwing.MyButton();
        btnThanhToan = new com.raven.suportSwing.MyButton();
        btnLSThanhToan = new com.raven.suportSwing.MyButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        txtTimSP = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblSanPham = new com.raven.suportSwing.TableColumn();
        btnThemSP = new com.raven.suportSwing.MyButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCTHD = new com.raven.suportSwing.TableColumn();

        setBackground(new java.awt.Color(255, 255, 255));

        pnlSanPham.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));

        btnThemKhachHang.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/raven/icon/add.png"))); // NOI18N
        btnThemKhachHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemKhachHangActionPerformed(evt);
            }
        });

        txtTenKH.setEnabled(false);
        txtTenKH.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTenKHKeyReleased(evt);
            }
        });

        txtDienThoai.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDienThoaiKeyReleased(evt);
            }
        });

        txtDiaChi.setEnabled(false);

        jLabel5.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel5.setText("Địa chỉ");

        jLabel9.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel9.setText("Điện thoại");

        jLabel3.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel3.setText("Khách hàng");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel8.setText("THÔNG TIN KHÁCH HÀNG");

        btnLoaKH.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/raven/icon/Refresh.png"))); // NOI18N
        btnLoaKH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoaKHActionPerformed(evt);
            }
        });

        btnTim.setText("Tìm");
        btnTim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlSanPhamLayout = new javax.swing.GroupLayout(pnlSanPham);
        pnlSanPham.setLayout(pnlSanPhamLayout);
        pnlSanPhamLayout.setHorizontalGroup(
            pnlSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSanPhamLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(pnlSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlSanPhamLayout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)
                        .addComponent(txtDienThoai, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnTim, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlSanPhamLayout.createSequentialGroup()
                        .addGroup(pnlSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtTenKH, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE)
                            .addComponent(txtDiaChi))
                        .addGap(18, 18, 18)
                        .addComponent(btnLoaKH)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnThemKhachHang))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlSanPhamLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addGap(69, 69, 69))
        );
        pnlSanPhamLayout.setVerticalGroup(
            pnlSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSanPhamLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel8)
                .addGap(35, 35, 35)
                .addGroup(pnlSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlSanPhamLayout.createSequentialGroup()
                        .addComponent(btnThemKhachHang)
                        .addGap(27, 27, 27)
                        .addGroup(pnlSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtTenKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)))
                    .addGroup(pnlSanPhamLayout.createSequentialGroup()
                        .addGroup(pnlSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDienThoai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)
                            .addComponent(btnTim))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnLoaKH)))
                .addContainerGap(143, Short.MAX_VALUE))
        );

        pnlHoaDon.setBackground(new java.awt.Color(255, 255, 255));
        pnlHoaDon.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel1.setText("Ngày tạo");

        txtNgayTao.setEnabled(false);

        jLabel2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel2.setText("Mã hóa đơn");

        txtSoHD.setEnabled(false);

        jLabel6.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel6.setText("Nhân viên");

        txtNhanVien.setOpaque(true);

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel7.setText("HÓA ĐƠN BÁN HÀNG");

        javax.swing.GroupLayout pnlHoaDonLayout = new javax.swing.GroupLayout(pnlHoaDon);
        pnlHoaDon.setLayout(pnlHoaDonLayout);
        pnlHoaDonLayout.setHorizontalGroup(
            pnlHoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlHoaDonLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(pnlHoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlHoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtSoHD)
                    .addComponent(txtNhanVien)
                    .addComponent(txtNgayTao, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(95, 95, 95)
                .addComponent(jLabel7)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlHoaDonLayout.setVerticalGroup(
            pnlHoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHoaDonLayout.createSequentialGroup()
                .addGroup(pnlHoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlHoaDonLayout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(jLabel7))
                    .addGroup(pnlHoaDonLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(pnlHoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtNgayTao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlHoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSoHD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlHoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(46, Short.MAX_VALUE))
        );

        pnlTTHoaDon.setBackground(new java.awt.Color(255, 255, 255));
        pnlTTHoaDon.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setText("Tổng cộng");

        txtTongTien.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtTongTien.setEnabled(false);
        txtTongTien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTongTienActionPerformed(evt);
            }
        });

        btnTaoHDMoi.setText("Hoá đơn mới");
        btnTaoHDMoi.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnTaoHDMoi.setRadius(10);
        btnTaoHDMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTaoHDMoiActionPerformed(evt);
            }
        });

        btnThanhToan.setText("Thanh toán");
        btnThanhToan.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnThanhToan.setRadius(10);
        btnThanhToan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThanhToanActionPerformed(evt);
            }
        });

        btnLSThanhToan.setText("Lịch sử thanh toán");
        btnLSThanhToan.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnLSThanhToan.setRadius(10);
        btnLSThanhToan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLSThanhToanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlTTHoaDonLayout = new javax.swing.GroupLayout(pnlTTHoaDon);
        pnlTTHoaDon.setLayout(pnlTTHoaDonLayout);
        pnlTTHoaDonLayout.setHorizontalGroup(
            pnlTTHoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTTHoaDonLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(158, 158, 158)
                .addComponent(btnTaoHDMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnLSThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );
        pnlTTHoaDonLayout.setVerticalGroup(
            pnlTTHoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTTHoaDonLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(pnlTTHoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTaoHDMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(btnLSThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Thêm sản phẩm"));

        jLabel13.setText("Tìm sản phẩm");

        txtTimSP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimSPKeyReleased(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/raven/icon/Refresh.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        tblSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã Sản phẩm", "Tên Sản phẩm", "Đơn giá"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblSanPham.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblSanPhamKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(tblSanPham);

        btnThemSP.setText("Thêm Sản phẩm");
        btnThemSP.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnThemSP.setRadius(10);
        btnThemSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemSPActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtTimSP, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(14, 14, 14)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 444, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnThemSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(10, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(txtTimSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(45, 45, 45)
                            .addComponent(btnThemSP, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        tblCTHD.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Mã Sản phẩm", "Tên sản phẩm", "Số lượng", "Đơn giá", "Kích thước", "Thành tiền"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblCTHD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCTHDMouseClicked(evt);
            }
        });
        tblCTHD.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblCTHDKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblCTHD);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(pnlSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(pnlHoaDon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(pnlTTHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnlHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(pnlSanPham, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlTTHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
    public static String MaSP;
    public static int SoLuong;
    public static String kichThuoc;
    public static double dongia;
    private void btnThemKhachHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemKhachHangActionPerformed
        new AddKhachHang(new javax.swing.JFrame(), true).setVisible(true);
    }//GEN-LAST:event_btnThemKhachHangActionPerformed

    private void txtTongTienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTongTienActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTongTienActionPerformed

    private void txtTenKHKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTenKHKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTenKHKeyReleased

    private void txtTimSPKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimSPKeyReleased
        // TODO add your handling code here:
        fillSanPham();
    }//GEN-LAST:event_txtTimSPKeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tblSanPham.getModel();
        model.setRowCount(0);
        txtTimSP.setText("");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnLoaKHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoaKHActionPerformed
        // TODO add your handling code here:
        TaoMoiKH();
    }//GEN-LAST:event_btnLoaKHActionPerformed

    private void txtDienThoaiKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDienThoaiKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDienThoaiKeyReleased

    private void tblCTHDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblCTHDKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_tblCTHDKeyReleased

    private void tblSanPhamKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblSanPhamKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_tblSanPhamKeyReleased

    private void btnTaoHDMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTaoHDMoiActionPerformed
        TaoMoiHD();
    }//GEN-LAST:event_btnTaoHDMoiActionPerformed

    private void btnThanhToanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThanhToanActionPerformed
        this.thanhToan();
    }//GEN-LAST:event_btnThanhToanActionPerformed

    private void btnThemSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemSPActionPerformed
        themSP();
    }//GEN-LAST:event_btnThemSPActionPerformed

    private void btnTimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimActionPerformed
        // TODO add your handling code here:
        fillKhachHanh();
    }//GEN-LAST:event_btnTimActionPerformed

    private void btnLSThanhToanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLSThanhToanActionPerformed
        // TODO add your handling code here:
        new LichSuThanhToan(new javax.swing.JFrame(), true).setVisible(true);
    }//GEN-LAST:event_btnLSThanhToanActionPerformed

    private void tblCTHDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCTHDMouseClicked
        // TODO add your handling code here:
        
        deleteSP();
    }//GEN-LAST:event_tblCTHDMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.raven.suportSwing.MyButton btnLSThanhToan;
    private javax.swing.JButton btnLoaKH;
    private com.raven.suportSwing.MyButton btnTaoHDMoi;
    private com.raven.suportSwing.MyButton btnThanhToan;
    private javax.swing.JButton btnThemKhachHang;
    private com.raven.suportSwing.MyButton btnThemSP;
    private javax.swing.JButton btnTim;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel pnlHoaDon;
    private javax.swing.JPanel pnlSanPham;
    private javax.swing.JPanel pnlTTHoaDon;
    private com.raven.suportSwing.TableColumn tblCTHD;
    private com.raven.suportSwing.TableColumn tblSanPham;
    private javax.swing.JTextField txtDiaChi;
    private javax.swing.JTextField txtDienThoai;
    private javax.swing.JTextField txtNgayTao;
    private javax.swing.JTextField txtNhanVien;
    private javax.swing.JTextField txtSoHD;
    private javax.swing.JTextField txtTenKH;
    private javax.swing.JTextField txtTimSP;
    private javax.swing.JTextField txtTongTien;
    // End of variables declaration//GEN-END:variables
void init() {
        kichThuocBTN();
        fillComboBoxNhanVien();
        txtNgayTao.setText(ngayTao);
        txtSoHD.setText("HD" + SoHoaDon());
//        deleteSP();
    }

    // Hàm kiểm tra sự tồn tại của sản phẩm trong bảng hóa đơn chi tiết
    private boolean daTonTai(String maSP, String kichThuoc) {
        for (int i = 0; i < tblCTHD.getRowCount(); i++) {
            String maSPTrenBang = tblCTHD.getValueAt(i, 1).toString();
            String kichThuocTrenBang = tblCTHD.getValueAt(i, 5).toString();
            if (maSPTrenBang.equals(maSP) && kichThuocTrenBang.equals(kichThuoc)) {
                return true; // Sản phẩm đã tồn tại trong bảng hóa đơn chi tiết
            }
        }
        return false; // Sản phẩm chưa tồn tại trong bảng hóa đơn chi tiết
    }

// Hàm thêm sản phẩm vào bảng hóa đơn chi tiết hoặc tăng số lượng nếu sản phẩm đã tồn tại
    void themSP() {
        MaSP = tblSanPham.getValueAt(tblSanPham.getSelectedRow(), 0).toString();
        dongia = Double.parseDouble(tblSanPham.getValueAt(tblSanPham.getSelectedRow(), 2).toString());
        AddSanPham jdl = new AddSanPham(new javax.swing.JFrame(), true);
        jdl.setVisible(true);
        String TenSP = tblSanPham.getValueAt(tblSanPham.getSelectedRow(), 1).toString();
        String kichThuocSP = AddSanPham.kichThuoc1;
        int SoLuongSP = AddSanPham.soLuong1;
        double ThanhTien;

        if (daTonTai(MaSP, kichThuocSP)) {
            // Tăng số lượng sản phẩm hiện có trong bảng hóa đơn chi tiết
            for (int i = 0; i < tblCTHD.getRowCount(); i++) {
                String maSPTrenBang = tblCTHD.getValueAt(i, 1).toString();
                String kichThuocTrenBang = tblCTHD.getValueAt(i, 5).toString();
                if (maSPTrenBang.equals(MaSP) && kichThuocTrenBang.equals(kichThuocSP)) {
                    int soLuongHienTai = Integer.parseInt(tblCTHD.getValueAt(i, 3).toString());
                    tblCTHD.setValueAt(soLuongHienTai + SoLuongSP, i, 3); // Tăng số lượng sản phẩm
                    // Cập nhật lại thành tiền tương ứng
                    if (kichThuocSP.equals("S")) {
//                        dongia = dongia * 1;
                    } else if (kichThuocSP.equals("M")) {
                        dongia = dongia * 1.15;
                    } else if (kichThuocSP.equals("L")) {
                        dongia = dongia * 1.20;
                    } else {
                        dongia = dongia * 1.25;
                    }
                    ThanhTien = dongia * (soLuongHienTai + SoLuongSP);
                    tblCTHD.setValueAt(ThanhTien, i, 6); // Cập nhật thành tiền
                    txtTongTien.setText(TinhTien() + "");

                    return;
                }
            }
        } else {
            // Thêm sản phẩm mới vào bảng hóa đơn chi tiết
            if (kichThuocSP.equals("S")) {
//                ThanhTi = dongia * SoLuongSP;
            } else if (kichThuocSP.equals("M")) {
                dongia = dongia * 1.15;
            } else if (kichThuocSP.equals("L")) {
                dongia = dongia * 1.20;
            } else {
                dongia = dongia * 1.25;
            }
            ThanhTien = dongia * SoLuongSP;
//            System.out.println(kichThuocSP);
            ThemSanPhamTbCTHD(MaSP, TenSP, SoLuong, kichThuocSP, dongia, ThanhTien);
            txtTongTien.setText(TinhTien() + "");
        }
    }

    void kichThuocBTN() {
//        btnSuaHD.setPreferredSize(new Dimension(100, 50));
        btnTaoHDMoi.setPreferredSize(new Dimension(100, 50));
        btnThanhToan.setPreferredSize(new Dimension(100, 50));
    }

    void fillComboBoxNhanVien() {
        if (Auth.isLogin()) {
            txtNhanVien.setText(Auth.user.getTenNV());
        }
    }

    void fillSanPham() {
        SanPham sP = new SanPham();
        DefaultTableModel model = (DefaultTableModel) tblSanPham.getModel();
        model.setRowCount(0);
        String key = txtTimSP.getText();
        try {
            List<SanPham> list = dao.selectByKeywordSanPham(key);//Dọc dữ liệu từ CSDL0
            for (SanPham sp : list) {
                MaLoaiSP loaisp = loaidao.SelectbyID(sp.getMaLoai());
                Object[] row = {sp.getMaSP(), sp.getTenSP(), sp.getGiaBan()};
                model.addRow(row);
            }
        } catch (Exception e) {
            MsgBox.alert(this, "lỗi try vấn dữ liệu");
        }

    }

    void fillKhachHanh() {
        String soDT = txtDienThoai.getText();
        KhachHang kH = new KhachHang();

        try {
            List<KhachHang> list = khdao.selectBySoDTKH(soDT);//Dọc dữ liệu từ CSDL
            for (KhachHang kh : list) {
                txtDienThoai.setText(kh.getSoDTKH());
                txtDiaChi.setText(kh.getDiaChi());
                txtTenKH.setText(kh.getTenKH());

            }
        } catch (Exception e) {
            MsgBox.alert(this, "lỗi try vấn dữ liệu");
        }

    }

    private double TinhTien() {
        double tongTien = 0;
        for (int i = 0; i < tblCTHD.getRowCount(); i++) {
            tongTien += (double) tblCTHD.getValueAt(i, 6);
        }
        return tongTien;
    }

    private void ThemSanPhamTbCTHD(String maSP, String tenSP, int soLuong, String kichThuoc,
            double donGia, double thanhTien) {

        DefaultTableModel tbModel = (DefaultTableModel) tblCTHD.getModel();

        Object obj[] = new Object[7];

        obj[0] = tbModel.getRowCount() + 1;
        obj[1] = maSP;
        obj[2] = tenSP;
        obj[3] = soLuong;
        obj[5] = kichThuoc;
        obj[4] = donGia;
        obj[6] = thanhTien;
        tbModel.addRow(obj);

    }
    Date now = new Date();
    //Lấy ngày hệ thống
    SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
    String ngayTao = formatter.format(now);

    void thanhToan() {

        if (tblCTHD.getRowCount() <= 0) {
            MsgBox.alert(this, "Chưa có sản phẩm!");
            return;
        }
        try {
            HoaDon hd = getFromHoaDon();
//        //Thêm hóa đơn vào database
            hddao.insert(hd);
            //Set MaHD mới thêm dc vào Hóa đơn hd
            hd.setMaHD(BLLHoaDon.GetMaHDBySoHoaDon(hd.getSoHD()));
//        //Thêm tất cả chi tiết hóa đơn theo MaHD vừa thêm
            ThemCTHDTuTable(hd.getMaHD());
//        //gọi hàm xuất hóa đơn
            XuatHoaDon xuathoadon = new XuatHoaDon();
            xuathoadon.XuatHoaDon(hd.getMaHD());
            xuathoadon.setVisible(true);
//            xuat();
//
//        //tạo lại hóa đơn mới
            MsgBox.alert(this, "Thanh toán thành công!");
            TaoMoiHD();
            SoHoaDon();
        } catch (Exception e) {
            System.out.println(e);
            MsgBox.alert(this, "Thanh toán thất bại!");
        }

    }

    private String SoHoaDon() {
        String soHoaDon = "";

        try {
            DateFormat dateFormat = new SimpleDateFormat("My");
            Date d = new Date();

            soHoaDon = dateFormat.format(d);

            ResultSet rs = HoaDonDAO.countSoHoaDon(soHoaDon);
//            System.out.println("rs"+rs);
            int rowCount = 0;

            if (rs != null && rs.next()) { // Kiểm tra null trước khi sử dụng ResultSet
                rowCount = rs.getInt(1);
                boolean dup = false;

                do {
                    if (rowCount > 98) {
                        soHoaDon = soHoaDon + (rowCount + 1);
                    } else if (rowCount > 8) {
                        soHoaDon = soHoaDon + "0" + (rowCount + 1);
                    } else {
                        soHoaDon = soHoaDon + "00" + (rowCount + 1);
                    }

                    ResultSet rs2 = HoaDonDAO.getBySoHoaDon(soHoaDon);
                    if (rs2 != null && rs2.next()) { // Kiểm tra null trước khi sử dụng ResultSet
                        dup = true;
                        rowCount++;
                        soHoaDon = dateFormat.format(d);
                    } else {
                        dup = false;
                    }
                } while (dup);
            }
        } catch (SQLException ex) {
            System.out.println("Lỗi số hóa đơn: " + ex.getMessage());
        }

        return soHoaDon;
    }

    HoaDon getFromHoaDon() {
        HoaDon hd = new HoaDon();
        String tenKh = txtTenKH.getText();
        hd.setSoHD(txtSoHD.getText());
        hd.setNgayTao(XDate.toDate(ngayTao, "yyyy-MM-dd"));
        hd.setTongTien(Float.parseFloat(TinhTien() + ""));
//        System.out.println(Float.parseFloat(txtTongTien.getText()));
        // Duyệt qua danh sách Khách hàng trong combobox để tìm mã loại dựa trên tên loại
        List<KhachHang> list = khdao.selectAll();
        for (KhachHang kh : list) {
            if (kh.getTenKH().equals(tenKh)) {
                hd.setMaKH(kh.getMaKH());
//                System.out.println(loai.getMaLoai());
                break;
            }
        }
        hd.setMaNV(Auth.user.getMaNV());
        return hd;
    }

    /*Hàm thêm tất cả các dòng trong Table vào bảng chi tiết hóa đơn*/
    private void ThemCTHDTuTable(int maHD) {
        for (int i = 0; i < tblCTHD.getRowCount(); i++) {
            String maSP = tblCTHD.getValueAt(i, 1).toString();
            int soLuong = Integer.parseInt(tblCTHD.getValueAt(i, 3).toString());
            float donGia1 = Float.parseFloat(tblCTHD.getValueAt(i, 4).toString());
            String kichThuoc1 = tblCTHD.getValueAt(i, 5).toString();
            float thanhTien = Float.parseFloat(tblCTHD.getValueAt(i, 6).toString());
            ThemChiTietHoaDon(maHD, maSP, soLuong, kichThuoc1, donGia1, thanhTien);
        }
    }

    private void ThemChiTietHoaDon(int MaHD, String maSp, int SoLuong, String kichThuoc, float donGia,
            float ThanhTien) {

        HoaDonChiTiet cthd = new HoaDonChiTiet();
        cthd.setSoLuong(SoLuong);
        cthd.setDonGia(donGia);
        cthd.setKichThuoc(kichThuoc);
        cthd.setThanhTien(ThanhTien);
        cthd.setMaHD(MaHD);
        cthd.setMaSP(maSp);
        hdctdao.insert(cthd);
    }
//Xóa sản phẩm có trong table hóa đơn chi tiết

    void deleteSP() {
        DefaultTableModel model = (DefaultTableModel) tblCTHD.getModel();
        tblCTHD.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                if (e.getClickCount() == 2) {
                    // Lấy hàng được double click
                    int rowToRemove = tblCTHD.getSelectedRow();
                    if (rowToRemove != -1) {
                        // Xóa hàng được double click
                        model.removeRow(rowToRemove);
                        txtTongTien.setText(TinhTien() + "");
                    } else {
                    }
                }
            }
        });

    }

    private void TaoMoiHD() {
        txtTongTien.setText("");
        txtSoHD.setText("HD" + SoHoaDon());
        TaoMoiKH();
        DefaultTableModel tbModel = (DefaultTableModel) tblCTHD.getModel();
        tbModel.setRowCount(0);
//        SoHoaDon();
    }

    private void TaoMoiKH() {
        txtTenKH.setText("");
        txtDienThoai.setText("");
        txtDiaChi.setText("");
    }
    //Tạo hàm xuất hóa đơn

}
